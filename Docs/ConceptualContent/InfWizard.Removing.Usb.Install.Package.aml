<?xml version="1.0" encoding="utf-8"?>
<topic id="588bcacc-c42e-4e5c-ac00-a6c5be7aba87" revisionNumber="1">
  <developerHowToDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!--
    <summary>
      <para>Optional summary abstract</para>
    </summary>
    -->
    <introduction>
      <para>
        The InfWizard can be used to remove/clean up usb install packages.
      </para>
    </introduction>
    <alert class="warning">
      <list>
        <listItem>
          Removing unknown devices can irreparably damage the operating system.
        </listItem>
        <listItem>
          Windows 7/Vista users must run the InfWizard utility as administrator.
        </listItem>
      </list>
    </alert>
    <!-- Optional procedures followed by optional code example but must have
         at least one procedure or code example -->
    <procedure>
      <title>Remove a Usb Device Install Package</title>
      <steps class="ordered">
        <step>
          <content>
            <para>
              Launch the InfWizard and click <userInput>Next</userInput>.
            </para>
            <mediaLink>
              <caption placement="after" lead="InfWizard">Welcome</caption>
              <image placement="left" xlink:href="InfWizard.Welcome" />
            </mediaLink>
            <mediaLink>
              <image placement="left" xlink:href="GoldDivider" />
            </mediaLink>
          </content>
        </step>
        <step>
          <content>
            <para>
              Select the usb device to remove and click <userInput>Remove Device</userInput> to display the InfWizard Remove Device window.
            </para>
            <mediaLink>
              <caption placement="after" lead="InfWizard">Remove Device Options</caption>
              <image placement="left" xlink:href="InfWizard.Remove.Device.1" />
            </mediaLink>
            <mediaLink>
              <image placement="left" xlink:href="GoldDivider" />
            </mediaLink>
          </content>
        </step>
        <step>
          <content>
            <para>
              The device removal function first calls the windows api function
              <externalLink>
                <linkText>SetupDiRemoveDevice</linkText>
                <linkAlternateText>SetupDiRemoveDevice on MSDN</linkAlternateText>
                <linkUri>http://msdn.microsoft.com/en-us/library/ff552097.aspx</linkUri>
                <linkTarget>_blank</linkTarget>
              </externalLink> and then
              <externalLink>
              <linkText>SetupUninstallOEMInf</linkText>
              <linkAlternateText>SetupUninstallOEMInf on MSDN</linkAlternateText>
              <linkUri>http://msdn.microsoft.com/en-us/library/aa377446%28v=VS.85%29.aspx</linkUri>
              <linkTarget>_blank</linkTarget>
            </externalLink>.
            </para>
            <para>
              If the <userInput>DeepClean</userInput> property was set to true, the remove 
              device function will scan ALL inf files in the 
              <localUri>[Windows]\Inf</localUri> for the selected devices VID and PID.  All 
              matching <localUri>inf</localUri> file are marked for deletion in the final 
              confirmation dialog.
            </para>

            <mediaLink>
              <caption placement="after" lead="InfWizard">Remove USB Device</caption>
              <image placement="left" xlink:href="InfWizard.Remove.Device.2" />
            </mediaLink>
            <mediaLink>
              <image placement="left" xlink:href="GoldDivider" />
            </mediaLink>
          </content>
        </step>

        <step>
          <content>
            <para>The dialog remains open after the device is removed so status can be reviewed.</para>
          </content>
        </step>
      </steps>
      <!-- <conclusion>Optional conclusion</conclusion> -->
    </procedure>
    <!-- <codeExample>Optional code example</codeExample> -->
    <!-- <buildInstructions>Optional instructions for building a
         code example.</buildInstructions> -->
    <!-- <robustProgramming>Optional discussion of error handling and other
         issues related to writing solid code.</robustProgramming> -->
    <!-- <security>Optional discussion of security issues.</security> -->
    <relatedTopics>
      <!-- One or more of the following:
           - A local link
           - An external link
           - A code entity reference

      <externalLink>
          <linkText>Link text</linkText>
          <linkAlternateText>Optional alternate link text</linkAlternateText>
          <linkUri>URI</linkUri>
      </externalLink>
      <codeEntityReference>API member ID</codeEntityReference>

      Examples:

      <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

      <externalLink>
          <linkText>SHFB on CodePlex</linkText>
          <linkAlternateText>Go to CodePlex</linkAlternateText>
          <linkUri>http://shfb.codeplex.com</linkUri>
      </externalLink>

      <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
      <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
      <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
      -->
    </relatedTopics>
  </developerHowToDocument>
</topic>